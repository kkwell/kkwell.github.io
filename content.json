{"meta":{"title":"Kvell","subtitle":"Follow your heart","description":"kong blog | Qt | C++ | qml","author":"Kong","url":"https://kkwell.github.io"},"pages":[{"title":"Three.js","date":"2018-10-07T14:37:12.000Z","updated":"2018-10-07T14:37:12.885Z","comments":true,"path":"Three-js/index.html","permalink":"https://kkwell.github.io/Three-js/index.html","excerpt":"","text":""},{"title":"","date":"2018-09-25T09:09:31.787Z","updated":"2018-09-25T09:09:31.787Z","comments":true,"path":"about/index.css","permalink":"https://kkwell.github.io/about/index.css","excerpt":"","text":"body{ margin: 0; padding: 0; border: 0; }"},{"title":"About me","date":"2018-09-28T05:44:08.000Z","updated":"2018-10-05T02:10:31.921Z","comments":true,"path":"about/index.html","permalink":"https://kkwell.github.io/about/index.html","excerpt":"","text":"github: https://github.com/kkwellgitee : https://gitee.com/kvellEmail : kong_w@foxmail.com"}],"posts":[{"title":"Debian系下项目打包","slug":"Debian系下项目打包","date":"2019-10-12T03:00:00.000Z","updated":"2019-10-31T07:34:42.570Z","comments":true,"path":"2019/10/12/Debian系下项目打包/","link":"","permalink":"https://kkwell.github.io/2019/10/12/Debian系下项目打包/","excerpt":"","text":"Debian系下项目打包版权声明：本文为原创文章，未经允许不得转载! @Kongkkwell.github.io/2019/10/12/Debian系下项目打包 ##1.将源文件编译debian打包只是打包，不提供编译功能，所以还需要自己编译。 ##2.整理打包所需文件 1）创建一个空目录在某目录下，例如我是在/home/gk/下建立一个目录work，现在目录为/home/gk/work 2）指定安装路径然后将需要打包的文件复制到该目录下，这里有很重要的一点，work这个目录就是一个”假根目录”，您在这个目录下所有的修改，最后都会被映射到目标机的根目录 / 下,比如说在该目录下（/home/gk/work）建立了一个usr/bin这样的目录，然后将我项目中的可执行文件放到usr/bin目录下(/home/gk/work/usr/bin/xxx)，当打完包安装的时候，这个可执行文件就会被安装到/usr/bin目录下(注意，这里是绝对路径)，同理，想让库文件安装到/usr/lib目录下，就得在当前目录（/home/gk/work）下建立usr/lib目录，然后将库文件放到其下（/home/gk/work/usr/lib/xxx）。 3）配置文件在work目录下建立一个名为DEBIAN的目录，在其下有两个文件，一个是control，另一个是md5sums,前一个是必须的，其中主要包含软件基本信息和维护者信息，后者是软件的md5校验值，可以有可以没有。 ##3.其它文件说明除了有control和md5sums文件外，还可以有还可能有preinst(preinstallation)（安装之前执行脚本）、postinst(postinstallation)（安装之后执行的脚本）、prerm(preremove)（卸载之前执行脚本）、postrm(postremove)（卸载之后执行的脚本）、copyright (版权）、changlog （修订记录）和conffiles等文件。 1）control: 这个文件主要描述软件包的名称（Package），版本（Version）以及描述（Description）等，是deb包必须具备的描述性文件，以便于软件的安装管理和索引。同时为了能将软件包进行充分的管理，可能还具有以下字段: Section: 这个字段申明软件的类别，常见的有utils,net, mail,text, x11 等；Priority: 这个字段申明软件对于系统的重要程度，如required,standard, optional,extra 等；Essential: 这个字段申明是否是系统最基本的软件包（选项为yes/no），如果是的话，这就表明该软件是维持系统稳定和正常运行的软件包，不允许任何形式的卸载（除非进行强制性的卸载）Architecture:申明软件包结构，如基于i386,amd64,m68k,sparc,alpha,powerpc 等；Source: 软件包的源代码名称；Depends: 软件所依赖的其他软件包和库文件。如果是依赖多个软件包和库文件，彼此之间采用逗号隔开；Pre-Depends: 软件安装前必须安装、配置依赖性的软件包和库文件，它常常用于必须的预运行脚本需求；Recommends: 这个字段表明推荐的安装的其他软件包和库文件；Suggests: 建议安装的其他软件包和库文件。示例如下：1234567891011Package: SGASVersion: 1.0.0Section: utilsPriority: optionalDepends: xviewg (&gt;= 3.2p1.4), xfig (&gt;= 1:3), libstdc++2.10-glibc2.2Suggests: fig2psArchitecture: i386Installed-Size: 512Maintainer: kong&lt;kong_w@foxmail.com&gt;Provides: SGASDescription: Electricity Payment. 2）preinst: 在Deb包文件解包之前，将会运行该脚本。许多“preinst”脚本的任务是停止作用于待升级软件包的服务，直到软件包安装或升级完成。示例如下:123#!/bin/shecho “my deb” &gt; /root/mydeb.logrm -rf /root/mydeb.log 3）postinst该脚本的主要任务是完成安装包时的配置工作。许多“postinst”脚本负责执行有关命令为新安装或升级的软件重启服务。 4）prerm该脚本负责停止与软件包相关联的daemon服务。它在删除软件包关联文件之前执行。 5）postrm该脚本负责修改软件包链接或文件关联，或删除由它创建的文件。 6）生成md5sums: md5sum . &gt; /home/gk/work/DEBIAN/md5sums #生成当前目录下所有文件的md5校验值,因为md5sum不能递归生成文件md5值，所以暂时只能挨个目录生成 如果DEBIAN目录中含有postinst 、prerm等执行文件，需要增加执行权限:1chmod -R 755 DEBIAN ##4.打包命令： dpkg -b /home/gk/work /home/gk/xxx.deb #将work目录下的内容打包到/home/gk下,xxx.deb为打包出来的deb文件。 ##5.相关指令安装：dpkg -i xxx.deb卸载：dpkg -r xxx查看deb包是否安装：dpkg -s xxx查看deb包文件内容：dpkg -c xxx.deb查看当前目录某个deb包的信息：dpkg –info xxx.deb解压deb包中所要安装的文件：dpkg -x xxx.deb file解压deb包中DEBIAN目录下的文件（至少包含control文件）:dpkg -e xxx.deb file/DEBIAN 至此，DEBIAN系下的ubuntu打包完毕","categories":[{"name":"Kong","slug":"Kong","permalink":"https://kkwell.github.io/categories/Kong/"}],"tags":[{"name":"Debian","slug":"Debian","permalink":"https://kkwell.github.io/tags/Debian/"},{"name":"打包","slug":"打包","permalink":"https://kkwell.github.io/tags/打包/"}]},{"title":"Ubuntu桌面快捷方式的创建","slug":"Ubuntu桌面快捷方式的创建","date":"2019-05-07T02:42:00.000Z","updated":"2019-05-07T03:44:29.852Z","comments":true,"path":"2019/05/07/Ubuntu桌面快捷方式的创建/","link":"","permalink":"https://kkwell.github.io/2019/05/07/Ubuntu桌面快捷方式的创建/","excerpt":"","text":"Ubuntu桌面快捷方式的创建版权声明：本文为原创文章，未经允许不得转载! @Kongkkwell.github.io/2019/05/07/Ubuntu桌面快捷方式的创建 本文以Ubuntu16.04为例，其余Linux桌面系统类似每一个应用程序快捷方式都和一个Desktop Entry文件相对应，系统会浏览这些文件，根据文件内容来实现特定的功能，这些文件都放在/usr/share/applications/目录下，用户可以参照这些已有的应用程序文件格式来编辑自己的快捷方式 快捷方式目录 测试系统:Ubuntu16.04 通过查看我们可以看到，这些文件都是以”.desktop”结尾的，系统根据这些文件的内容，来设置需要显示的快捷方式名称、图标显示、程序路径等信息，以下就是Desktop Entry文件的结构说明，帮助我们更好的编写符合要求的快捷方式，以下是Adobe Reader 9的快捷方式示例:123456789101112[Desktop Entry]Name=Adobe Reader 9MimeType=application/pdf;application/vnd.fdf;application/vnd.adobe.pdx;application/vnd.adobe.xdp+xml;application/vnd.adobe.xfdf;Exec=acroread Type=ApplicationGenericName=PDF ViewerTerminal=falseIcon=AdobeReader9Caption=PDF ViewerX-KDE-StartupNotify=falseCategories=Application;Office;Viewer;X-Red-Hat-Base;InitialPreference=9 Desktop Entry文件结构Desktop Entry 文件通常以字符串”[Desktop Entry]”开始。由示例可以得知，Desktop Entry 文件的内容是由若干{关键字，数值}配对的 Entry 组成的。例如，”Name”就是一个关键字，关键字”Name”对应的数值是”Adobe Reader 9”。Desktop Entry 文件标准定义了一系列标准关键字。标准关键字分为必选和可选两种：必选标准关键字必须在 .desktop 文件中被定义；而可选关键字则不必。以下是对重点关键字的解析。 1.关键字”Version”：[可选] 该数值指定了当前 Desktop Entry 文件所遵循的 Desktop Entry 文件标准版本。2.关键字”Encoding”：[1.0 版本不推荐使用] 该数值指定了当前 Desktop Entry 文件中特定字符串所使用的编码方式。尽管Desktop Entry 文件标准 1.0 不再推荐使用该关键字，但由于历史原因该关键字仍然广泛出现在现有的 Desktop Entry 文件中。3.关键字”Name”：[必选]该数值指定了相关应用程序的名称。比如在示例中关键字”Name”的数值是”Adobe Reader 9”。打开文件浏览器，进入”/usr/share/applications”目录，就可以看见”AdobeReader.desktop”文件所定义的快捷方式的显示样式，如截图所示。其中，快捷方式的显示名称由关键字”Name”的数值所决定，快捷方式所使用的图标由下文中将要介绍的关键字”Icon”的数值 来决定。当然，这些定义在应用程序浏览器中同样适用。4.关键字”GenericName”：[可选]该数值指定了相关应用程序的通用名称。比如在示例中关键字”GenericName”的数值是”PDF Viewer”。有些桌面系统打开应用程序浏览器，就可以看见字符串”PDF Viewer”被显示在图标的右侧。5.关键字”Comment”：[可选]该数值是对当前Desktop Entry的简单描述。6.关键字”Type”：[必选]关键字”Type”定义了Desktop Entry文件的类型。常见的”Type”数值是”Application”和”Link”。”Type = Application”表示当前Desktop Entry文件指向了一个应用程序；而”Type = Link”表示当前Desktop Entry文件指向了一个URL (Uniform Resource Locator)。7.关键字”Exec”：[可选]关键字”Exec”只有在”Type”类型是”Application”时才有意义。”Exec”的数值定义了启动指定应用程序所要执行的命令，在此命令 是可以带参数的。8.关键字”URL”：[可选]关键字”URL”只有在”Type”类型是”Link”时才有意义。”URL”的数值定义了该Desktop Entry文件指向的URL。双击含有上述内容的Desktop Entry文件将启动web浏览器，并打开指定网页。9.关键字”Icon”：[可选]该数值定义了当前Desktop Entry文件在应用程序浏览器或是在文件浏览器中所显示的图标。如果关键字”Icon”的数值是以绝对路径的格式给出，那么其数值所指定图标文件将被使用；反之，Linux系统将使用”Icon Theme Specification”[2]在系统指定图标目录下定位所需要使用的图标文件。比如在本例中关键字”Icon”的数值是”AdobeReader9”，它实际对应着系统指定图标目录下的图片文件”AdobeReader9.png”。10.关键字”StartupNotify”：[可选]关键字”StartupNotify”的数值是布尔值（true 或是 false）。该关键字只有在”Type”类型是”Application”时才有意义。其数值的含义由规范”Startup Notification Protocol Specifications”[3]定义，在此不再详述。11.关键字”Terminal”：[可选]和”StartupNotify”一样，关键字”StartupNotify”的数值也是布尔值，并且该关键字只有在”Type”类型 是”Application”时才有意义。其数值指出了相关应用程序（即关键字”Exec”的数值）是否需要在终端窗口中运行。12.关键字”Categories”：[可选]关键字”Categories”只有在”Type”类型是”Application”时才有意义。”Categories”的数值指出了相关应用程序在菜单中显示的类别。具体菜单分类由规范”Desktop Specification Menu”具体定义[4]。13.关键字”OnlyShowIn”和”NotShowIn”：[可选]这两个关键字分别定义了当前Desktop Entry是否在特定Linux 桌面系统（例如：Linux GNOME 或 Linux KDE）下显示（由”OnlyShowIn”定义），或不显示（由”NotShowIn”定义）。具体定义请参考”Desktop Specification Menu”[4]。14.关键字”X-SuSE-translate”：[SUSE Linux特有]关键字”X-SuSE-translate”是SUSE Linux（http://www.novell.com/linux/） 特有的。”X-SuSE-translate”符合SUSE RPM Package风格。”X-SuSE-translate”数值表示是否要对关键字”Name”和”GenericName”进行翻译。详情请参 考”SUSE Package Conventions”[5]。15.本地化关键字”[LOCALE]”根据”Desktop Entry Specification”规范[1]，在关键字后加上字符串”[LOCALE]”就可以对该关键字进行特定的本地化定义。”LOCALE”的合法取值为：1LOCALE= lang_COUNTRY.ENCODING@MODIFIER在此，域”_COUNTRY”，”.ENCODING”和”@MODIFIER”是可以被忽略的。当指定Desktop Entry文件被解析时，解析器应当根据当前POSIX locale来正确获取本地化的关键字数值。16.其余关键字除了上述关键字外，”Desktop Entry Specification”还定义了”Hidden”，”TryExec”，”MimeType”等可选关键字。用户可以根据需要进行选取。 以上内容来自 更详尽内容请参考：参考链接 因此，按照以上步骤在/usr/share/applications/目录下创建自己的快捷方式文件，然后授予执行权限:1sudo chmod +x filename就可以生成自己程序的快捷方式了","categories":[{"name":"Kong","slug":"Kong","permalink":"https://kkwell.github.io/categories/Kong/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://kkwell.github.io/tags/Ubuntu/"},{"name":"技巧","slug":"技巧","permalink":"https://kkwell.github.io/tags/技巧/"}]},{"title":"Ubuntu下PDF文件打印方案探索","slug":"Ubuntu下PDF文件打印方案探索","date":"2018-12-01T03:15:53.000Z","updated":"2018-12-12T06:34:33.637Z","comments":true,"path":"2018/12/01/Ubuntu下PDF文件打印方案探索/","link":"","permalink":"https://kkwell.github.io/2018/12/01/Ubuntu下PDF文件打印方案探索/","excerpt":"","text":"Ubuntu下PDF文件打印方案探索版权声明：本文为原创文章，未经允许不得转载! @Kongkkwell.github.io/2018/12/01/Ubuntu下PDF文件打印方案探索 方案1:pdf.js读取显示PDF文档并打印优势:代码完全集成，可以自由控制导入显示pdf并操作打印劣势:需要WebEngine引擎支持，速度加载较慢，例如在Qt中需要QWebEngine引擎模块(采用的Google的Web引擎)，直接解析html代码，并调用JavaScript接口，如果有能力可以直接重写JavaScript接口供qml使用。但是目前无法支持html界面直接打印的指令，可能需要在qml中自己处理相关消息，这一点没有深究，还有就是可以直接将打开的单页pdf文件截图打印，对于单页打印较为方便 由于是前几个月弄过，有些遗忘，具体详细过程暂缺。 方案2:Acrobat Reader打印方案优势:环境安装好后，只需要调用acroread指令调用PostScript指令将解析的pdf通过lp打印指令即可方便完成文档打印劣势:有些代码平台并不支持，官方安装包支持有限，移植打印驱动以及安装Acrobat Reader以及中文打印较为复杂，打印的可操作性有限 具体方法如下: 由于Adobe Reader开发的Linux端软件只有先前的32位版本，所以推荐使用32位系统，否则用64位系统通过安装32位lib库有些更新并无法完全支持，本次测试Ubuntu16.04 32位版本通过1.准备工具Acrobat Reader 9.5 for english1wget ftp://ftp.adobe.com/pub/adobe/reader/unix/9.x/9.5.5/enu/AdbeRdr9.5.5-1_i386linux_enu.deb推荐复制链接用迅雷下载，否则龟速 下载简体中文支持包，由于官方只找到8.1版本的，如果有更新请直接使用最新版本Acrobat Reader 9.5 for english1http://ardownload.adobe.com/pub/adobe/reader/unix/8.x/8.1.1/misc/FontPack81_chs_i486-linux.tar.gz同样推荐迅雷下载 2.安装中文字体12$ sudo apt-get install ttf-wqy-zenhei$ sudo apt-get install ttf-wqy-microheiAcrobat Reader123456$ sudo apt-get install gdebi$ sudo gdebi AdbeRdr9.5.5-1_i386linux_enu.deb//网上有说要入下这些库，但是这些库好像系统已经包含了，也记录一下$ sudo apt-get install libgtk2.0-0:i386 libnss3-1d:i386 libnspr4-0d:i386 libxml2:i386 libxslt1.1:i386 libstdc++6:i386卸载Adobe Reader 和相关库文件：$ sudo apt-get remove AdbeRdr9 libgtk2.0 libnss3-1d libnspr4-0d lib32nss-mdns libxml2 libxslt1.1 libstdc++6 中文支持方法123456789101112$ tar xvf FontPack81_chs_i386-linux.tar.gz$ cd CHSKIT/$ tar xvf BINCOM.TAR$ mv Adobe a$ tar xvf LANGCHS.TAR$ mv Adobe b$ tar xvf LANGCOM.TAR$ mv Adobe c//将8.1字体拷贝到Adobe9的字体目录下$ sudo cp CHSKIT/a/Reader8/Reader/intellinux/lib/libicudata.so.34.0 /opt/Adobe/Reader9/Reader/intellinux/lib$ sudo cp -r CHSKIT/b/Reader8/Resource/CIDFont/ /opt/Adobe/Reader9/Resource/$ sudo cp CHSKIT/c/Reader8/Resource/CMap/* /opt/Adobe/Reader9/Resource/CMap 参考链接：1http://stesen.wikidot.com/acroread 3.打印驱动这部分跟所使用的打印机有关，我以目前使用的Brother HL-2260打印机为例在官网的驱动下载页面，选择OS:Linux,根据自己使用的Linux版本选择deb或者rpm，下载Driver Install Tool(注意这个驱动是支持LPR, CUPSwrapper的)根据官方说明，正常安装驱动，然后打印测试页应该可以正常打印了 4.命令行打印我们开发的用户程序需要自动打印pdf文档的，所以我们需要在我们代码里根据pdf路径生成打印指令直接执行进行打印打印指令如下：1cat document.pdf | acroread -toPostScript -optimizeForSpeed -rotateAndCenter | lp -d printer 至此，我们就可以控制随意打印需要的pdf文档了 Acroread 相关指令参数： 后记：指令打印与用Adobe Reader打印的数字字体有差异，不知道是什么原因导致的，可能跟系统的cat指令有关，有知道的希望可以给个建议","categories":[{"name":"Kong","slug":"Kong","permalink":"https://kkwell.github.io/categories/Kong/"}],"tags":[{"name":"PDF打印","slug":"PDF打印","permalink":"https://kkwell.github.io/tags/PDF打印/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://kkwell.github.io/tags/Ubuntu/"}]},{"title":"gSOAP的Qt使用","slug":"gSOAP的Qt使用","date":"2018-11-06T12:10:41.000Z","updated":"2019-06-25T08:43:54.213Z","comments":true,"path":"2018/11/06/gSOAP的Qt使用/","link":"","permalink":"https://kkwell.github.io/2018/11/06/gSOAP的Qt使用/","excerpt":"","text":"gSOAP的Qt使用版权声明：本文为原创文章，未经允许不得转载! @Kongkkwell.github.io/2018/11/06/gSOAP的Qt使用 本次说明主要针对gSOAP的使用，其中涉及的gSOAP的源码请自行下载，本次测试使用的是目前最新版:gsoap_2.8.73 假设本次WebService的地址(EndPoint)为:http://xxxxx:xxxx/xxxx.asmx先找到WSDL,一般默认如下：1http://xxxxx:xxxx/xxxx.asmx?WSDL 在浏览器中访问该链接，在页面中我们可以看到全部的接口都会包含在页面里，所有的接口描述，入口以及出口函数以下为本次示例的接口： 此次我们以其中的manEntrance接口来进行测试 #下面是gSOAP的代码使用 ##1准备工作由于gSOAP压缩包中的gsoap/bin目录下只提供了macosx以及win32的应用工具，因此此次我们以Windows生成方法为主，生成后的文件是跟平台无关的，都可以使用其次是git bash工具的安装，因为在Windows上需要执行相关命令操作，这个还是比较方便，如果windows命令行比较熟悉的话，完全不需要安装 ##2gSOAP文件生成在解压目录的gsoap\\bin\\win32\\下执行如下指令：1wsdl2h -s -o TestSOAP.h http://xxxxx:xxxx/xxxx.asmx?WSDL生成 TestSOAP.h 文件继续执行(我的解压目录为F盘根目录)1soapcpp2 -CLx -IF:\\gsoap-2.8\\gsoap\\import TestSOAP.h这样就生成了我们需要的所有文件，然后在执行目录文件夹下以及F:\\gsoap-2.8\\gsoap\\import文件夹下分别找到如下文件并拷贝到自己的工程文件夹下:1234567soapC.cppsoapClient.cppsoapH.hsoapStub.hstdsoap2.cppstdsoap2.hxxxxxxxxxxxxxxx.nsmap ##3测试代码在工程中添加:1234#include \"soapC.cpp\"#include \"soapClient.cpp\"#include \"stdsoap2.cpp\"#include \"xxxxxxxxxxxxxxx.nsmap\"客户端调用如下:1234567891011121314151617181920212223242526272829303132333435//初始化SOAPstruct soap _soap;soap_init(&amp;_soap);int result = 0; //SOAP返回值QString errStr = \"\"; //出错提示QString strRes = \"\"; //结果字符串QString msg = \"xxx\"; //函数调用参数//WebService地址QString sUrl= \"http://xxxxx:xxxx/xxxx.asmx\"; //request和response_ns1__mainEntrance req;_ns1__mainEntranceResponse res;//QString 需要转为 char*QByteArray ba = msg.toLatin1();req.in0 = ba.data();QByteArray cUrl = sUrl.toLatin1();soap_call___ns1__mainEntrance(&amp;_soap,cUrl.data(),\"\",&amp;req,res);if(_soap.error!=0)&#123; errStr = QString::fromLocal8Bit(*soap_faultstring(&amp;_soap)); result = _soap.error;&#125;else&#123; strRes = QString::fromUtf8(res.out);&#125;soap_end(&amp;_soap);soap_done(&amp;_soap);//打印调用结果信息qDebug()&lt;&lt;strRes&lt;&lt;result&lt;&lt;errStr; #后记WebService发送会阻塞等待，需要创建单独线程执行一般情况下我们需要发送xml文件，并接收一个xml文件解析，以下说明xml文件的Qt操作(使用Dom方式) ##1xml文件生成12345678910#include &lt;QDomElement&gt;QDomDocument xmldoc;QDomNode instruction = xmldoc.createProcessingInstruction(\"xml\",\"version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"\");xmldoc.appendChild(instruction);QDomElement root = xmldoc.createElement(\"order\");xmldoc.appendChild(root);QDomElement ser = xmldoc.createElement(\"serviceCode\");root.appendChild(ser);QDomText sertext = xmldoc.createTextNode(\"insep\");ser.appendChild(sertext);生成文件如下:1234&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;order&gt; &lt;serviceCode&gt;insep&lt;/serviceCode&gt;&lt;/order&gt; ##2xml文件解析基本上我们收发文件都是以字符串的形式，因此解析的时候可以将字符串先转换为QDomDocument类型，就可以随意操作了12345678QString data; //要解析的字符串QDomDocument xmldoc;xmldoc.setContent(data);QDomNode node = xmldoc.firstChild();while(!node.isNull())&#123; qDebug()&lt;&lt;node.toElement().tagName(); node = node.nextSibling();//下一个兄弟节点&#125;如果是当前节点的下的下一级节点，在循环中通过node.toElement().firstChild()获取第一个子节点，然后再遍历，这里自己可以写一个满足自己数据要求的递归调用来实现相关功能。","categories":[{"name":"Kong","slug":"Kong","permalink":"https://kkwell.github.io/categories/Kong/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"https://kkwell.github.io/tags/Qt/"},{"name":"移植","slug":"移植","permalink":"https://kkwell.github.io/tags/移植/"}]},{"title":"大美新疆--喀纳斯","slug":"大美新疆-喀纳斯","date":"2018-10-07T03:51:07.000Z","updated":"2018-10-07T15:00:04.718Z","comments":true,"path":"2018/10/07/大美新疆-喀纳斯/","link":"","permalink":"https://kkwell.github.io/2018/10/07/大美新疆-喀纳斯/","excerpt":"","text":"如果没有来过喀纳斯，我对新疆的认知还会停留在羊肉串、葡萄干、沙漠、盆地的狭隘 概念中。当驾车在盘山公路绕的晕头转向的时候，已不觉闯入喀纳斯的怀抱之中。“这块天地如此之新，许多东西尚未命名，提起它们时还须用手指指点点”，是的，这里有太多与众不同，尤其是那湖水，在激荡之中泛起雪白的浪花，散落下去又融入无垠的翡翠长流中。曾经见过许多河流湖泊，除了长江、黄河，大美如太湖，静美若西湖，奇特如秦岭的翠华山天池堰塞湖，惊艳如青海湖，天空之镜如茶卡盐湖，这些都只能算“小巫”，而喀纳斯湖就是那“大巫”。 乘坐区间车，由贾登峪到喀纳斯换乘中心的途中，车中乘客无不惊呼，这水也太好看了。 晚上7点的喀纳斯湖，日光西斜，我们抓住这一日的尾巴，买了双湖游船的船票，准备给明天留出更多时间徒步。 湖上风光图。青山白浪，万重千叠。碧水蓝天，十步一景。 第一天最令人难忘的时光反而没有留下电子照片，唯有一张留念照因为有一些陌生人不便于使用，也就大概记下吧。平生第一次漂流竟然就是在8月的喀纳斯，那是我们首次近距离的摸到湖水，感受在湍流的作用下，皮艇上下跳跃。水下有一部分区域暗石很多，导致水流冲击。漂流艇上一前一后两位师傅熟稔的在激流区掌舵，在静流区逗我们一行。除了我们一对情侣外，还有一个新疆乌市的壮汉及来自东北的旅游分队。尽管陌生，但在漂流中我们却如同熟识一般共同划艇，素昧平生的愉乐合作给人带来不一样的美好回忆。而“随波逐流”的放松与忘我让人回味。 晚上八点半，在游湖和漂流后走过的一片小水域。右边数棵树木枯死，树上停留了数只乌鸦，在夕阳西下时，哗的飞起。 早上的客栈。小木屋外一片紫色的花儿，营造了一片田园风光。昨晚仓促的吃了些东西，洗漱后都已经晚上11点。由于厚的外套放在车中，穿着短袖瑟瑟发抖看星星似乎不太现实，而且探头出去并没有看到太多，于是只能寄希望于禾木的夜空了。客栈老板看到我的短袖，用不是很听得懂的普通话说晚上会烧暖气。但摸了摸冰凉的暖气片，我还是把两床被子两个人都聚在一起，8月份的酷暑天这里也太冷了！然而我竟然在凌晨4点左右被热醒了！感谢客栈老板的供暖～ 早餐后，从客栈（新村）出发，这里是我们徒步的起点。终点大概在山的背面高处，一时也看不到，就开走吧。 上午十点，距离终点大概还有三分之一的路程，我们已经筋疲力尽。这会儿在太阳底下晒，在树荫底下冷，不知道如何安置自己，只能咬着牙继续走走走。不过天气很好，远处山峰上还有残留的冰雪。 就这样，万水千山走遍 即将登顶的风景。视野更为开阔，真是风景美如画。 观鱼台风景图（一），纵览喀纳斯湖，湖心有游艇划过，在水面留下波光粼粼，宛若游龙。 观鱼台风景图（二），这是很多喀纳斯风景宣传片所采用的拍摄角度，第一次有一种看到的比“所示图片仅供参考”的参考图更美的感觉。那感觉最直接的反应就是“值得”，来此一趟，不虚此行。 观鱼台停留了半个小时不到，我们择另一条小路下山。大多数乘客选择保存体力乘坐区间车，因此我们一路上基本没有同行者，安静的树林中有渐远的鸟叫声，时间在温暖的阳光下伸着懒腰，我们的身心亦宁静而喜悦。中午在换乘中心简单吃了一顿后我们开始了徒步三湾的旅程。（脚力真是好啊，后来酸爽了一个星期才缓过了） 图为神仙湾。我们首先乘坐区间车经过鸭泽湖，到达神仙湾。由于此处河岸较浅，水草较多，设有安全防护栏。我们并不能近距离的在水边行走，只可远观矣。 不知名的“花”还是“果”呢 图为月亮湾。自月亮湾开始，到卧龙湾一路风景尤其好，因为可以近距离的看到湖水，及变化了角度的风景。两岸水木丛生，如原始山林。 此处水域较为平静，灰黑色的是由于水流的冲击导致河岸变宽而倒入水中的树木，由于湖水清澈度很高，导致水底横陈的树木亦能看的大概。长短不一，裹挟了年轮尘封了岁月。 在碎石区，水流因落差而产生激流。岸边石块因经年累月的水流冲刷而圆润。 像一只树獭一样，我展开了我的双臂，亦如曾经此处的老树展开了它的枝桠我拥抱了阳光而阳光拥抱了古今 死掉的树与源源不断的活水融为一体。生与死，本身就是轮回之中，滚滚前进的吧“草在结它的种子风在摇它的种子我们站着不说话就十分美好” 行至卧龙湾，已经晚上六点光景。此处湖水清浅，风景别致。水中有小鱼群。 卧龙湾风景图 由湖底登到观景平台，才看到所谓的“卧龙”，冲击形成的水中小岛，形状不规则。岛上树木若干。 到此，三湾已经游尽，我们搭乘区间车到达贾登峪门口，开车赶在天黑前到达禾木。关于禾木，详见下回分解 版权声明：本文为原创文章，未经允许不得转载! @C ct.cn/EhR6N7X","categories":[{"name":"C c","slug":"C-c","permalink":"https://kkwell.github.io/categories/C-c/"}],"tags":[{"name":"旅游","slug":"旅游","permalink":"https://kkwell.github.io/tags/旅游/"}]},{"title":"布尔津-喀纳斯","slug":"布尔津-喀纳斯","date":"2018-10-07T03:38:20.000Z","updated":"2018-10-07T15:00:26.670Z","comments":true,"path":"2018/10/07/布尔津-喀纳斯/","link":"","permalink":"https://kkwell.github.io/2018/10/07/布尔津-喀纳斯/","excerpt":"","text":"在前半段中，没有山坡，多是不平坦的小丘。一眼望去，没有一个建筑。少了人的介入，回归了生存的本源。 大朵的白云在远处投射的阴影甚至盖过半个山丘，我们穿行在明暗之中，仿佛穿行于云彩之中。 渐渐的地势高起，远处小山相连，沿路两边错落着毡房，哈萨克人过着世代的迁徙生活。 接近喀纳斯时，风景已如画。山坡上牛羊悠然自得，近处草原绿意盎然，远处树林茂密挺拔。天空湛蓝，白云悠悠，就这么静静看着，仿佛依旧能回味起阳光暖暖的感觉。 这是我们中午休息时选择果腹之处。一个四岁左右的孩子熟练的执着缰绳，用不是很熟练的普通话向在此休息的游客兜售骑马的生意。后来一个稍大一些的男孩子过来与我们交流，最后以50元的价格谈定，我们俩骑马到对面山坡上溜一圈。由于紧张加上上坡再加上两人共骑一匹马，我们颤颤巍巍的贴在马背上，而马儿由于驮了重物上坡略微有些喘粗气。在走到山坡一半之处时，我再也受不了内心的煎熬，建议到这里就可以了，钱还是那么多没关系。真是担心把马儿累坏了呢…… 沿途风景 这是哈萨克小朋友的家里用羊奶制作的酸奶，虽然姐姐放了大勺白糖，后来我们又继续放了很多，还是非常酸。但哈萨克的小朋友说他喜欢喝不放糖的原汁原味的酸奶。 曾经在甘南旅行时喝到过本地的藏族风味酸奶，一小桶（就像我们在沙滩上提的小桶般大小），同时买了一整袋白砂糖。当酸奶与糖的比例是2:1时，吃起来甚至有沙沙的感觉，就觉得对了，这个味道刚刚好。 版权声明：本文为原创文章，未经允许不得转载! @C ct.cn/EhRIY62","categories":[{"name":"C c","slug":"C-c","permalink":"https://kkwell.github.io/categories/C-c/"}],"tags":[{"name":"旅游","slug":"旅游","permalink":"https://kkwell.github.io/tags/旅游/"}]},{"title":"阿勒泰的五彩滩","slug":"五彩滩","date":"2018-10-07T03:29:38.000Z","updated":"2018-10-07T15:00:41.960Z","comments":true,"path":"2018/10/07/五彩滩/","link":"","permalink":"https://kkwell.github.io/2018/10/07/五彩滩/","excerpt":"","text":"晚上9:00的五彩滩北岸，夕阳西下，断崖式的雅丹地貌焕发出新的魅力 晚上9:00的五彩滩北岸，游人如织，驻足欣赏 额尔齐斯河及南岸风光，其间有骆驼出入，或卧或立，犹如另一番世外桃源 晚上9:35的五彩滩额尔齐斯河，蜿蜒曲折于天地，拉扯夜幕 沟壑之中，红色、白色、黄色、紫色、绿色……犹如侏罗纪公园的风景 落日下的五彩滩，不远处的风力发电亦显得浓墨重彩 五彩滩——缓坡中的浅浅沟壑 一河两岸，南北各异 版权声明：本文为原创文章，未经允许不得转载! @C ct.cn/EhRcrfb","categories":[{"name":"C c","slug":"C-c","permalink":"https://kkwell.github.io/categories/C-c/"}],"tags":[{"name":"旅游","slug":"旅游","permalink":"https://kkwell.github.io/tags/旅游/"}]},{"title":"乌鲁木齐-阿勒泰","slug":"乌鲁木齐-阿勒泰","date":"2018-10-07T03:15:18.000Z","updated":"2018-10-07T15:01:23.361Z","comments":true,"path":"2018/10/07/乌鲁木齐-阿勒泰/","link":"","permalink":"https://kkwell.github.io/2018/10/07/乌鲁木齐-阿勒泰/","excerpt":"","text":"乌市初体验飞机降落在乌鲁木齐市时，应该是夏日晚上6点的时刻，如同行走在其他城市一般，我们没有觉察出些许与众不同。但坐落在西北内陆北纬43度，东经87度的省会城市，在我们即将落脚的时候，开始展开其丰富多彩的一面。如同遮面的女子，那面纱下的沧桑与清澈毫不违和，束缚与自由融为一体。 “请走安检通道”、 “滴、滴、滴”、“请出示下你的证件”…… 头盔、盾牌、防弹衣安检通道、 对讲机警觉的眼睛是一个城市惊魂甫定是沉默的对抗是和平的维护 这种装备和感觉伴随整个旅途，那些曾经的创伤被苍翠的植物、炽热的太阳所掩没，“安全”经不得反复考量，就如同“爱你”这一类词语，言说的却不如心底感受的。旅途归来，不禁感慨新疆的同胞生活的氛围，希望有机会再去，可以自由的入住宾馆、加油、超市采购。 租车完成后，已经是晚上8点多，那绚烂明亮的门外光景却让我们误以为还在下午。不知道新疆的本地居民是如何作息 ，但对于我们这两个夜猫子来说，似乎终于找到一种正当理由晚点休息，因为天没黑嘛。夜幕降临后才刚刚开始夜生活就9点半后了，于是五天的时间基本都是接近凌晨才休息。这种感觉如同把白日拉长了许多，以至于我们回来后一时无法适应黑夜降临的迫切与白日的短暂。 乌市至阿勒泰驱车行驶在北疆广袤的土地上，感受空间与时间的完美结合。少有人的地域，驾驶者与被驾驶者由一开始的兴奋、奔逐跳跃如脱兔渐渐进入一种无言的沉默中。如蜉蝣于天地，如沧海之一粟，感受渺小的躯壳中那微如荧光的灵魂在如白纸般的大地上流淌。 远处白云片片，随着行进变换着、在起伏的地貌上投下光影，近处雅丹地貌如一本浓缩了历史的书籍（注：“雅丹”在维吾尔语中的意思是“具有陡壁的小山包”） 行至克拉玛依市附近，被大片的机械采油场面所震撼，那抬起又落下的如纺锤的“头部”，如同饥渴的小崽儿铺在母亲的怀里，大口大口的攫取母乳 经过了 巴音托海收费站后，草原风景渐显，牛羊亦多了起来，此处为一头不顾来往的车辆的牛儿，兀自缓缓踱步 自驾车渐多，路边开始有停下驻足欣赏风景的游客，我们也沿路停放了一会儿，踩一踩这滋养了牛羊、留着奶与蜜的丰饶之地，图为拍摄的不知名花儿 行驶了8-9个小时后，终于赶在太阳下山前到达阿勒泰，为了欣赏到夕阳下的五彩滩，我们直接驱车至此处。关于五彩滩的风景，详见下回分解。 版权声明：本文为原创文章，未经允许不得转载! @C ct.cn/EhR5v8O","categories":[{"name":"C c","slug":"C-c","permalink":"https://kkwell.github.io/categories/C-c/"}],"tags":[{"name":"旅游","slug":"旅游","permalink":"https://kkwell.github.io/tags/旅游/"}]},{"title":"新疆喀纳斯自驾日志","slug":"新疆喀纳斯自驾日志","date":"2018-10-07T02:58:48.000Z","updated":"2018-10-07T15:01:01.928Z","comments":true,"path":"2018/10/07/新疆喀纳斯自驾日志/","link":"","permalink":"https://kkwell.github.io/2018/10/07/新疆喀纳斯自驾日志/","excerpt":"","text":"7.31下午【银川】【乌鲁木齐】，¥1530*2=¥3060夜宿#天航快捷宾馆# ¥126租车#起亚 新A77D09# ¥1800 共5天 8.1下午至【布尔津】，车辆通行费 20+20+10+25+25+66=¥166夜宿#戈壁春天快捷酒店# ¥228游#五彩滩# ¥50*2=¥100 8.2上午至【喀纳斯】，夜宿#乔波特客栈# ¥280游#喀纳斯# ¥2802=¥560 含区间车游#漂流# ¥2002=¥400游#双湖船# ¥120*2=¥240徒步#观鱼台#不花钱徒步#三湾#不花钱 8.3下午至【禾木】，游#禾木# ¥160*2=¥320 含区间车夜宿#青朴客栈# ¥398-101=¥297看星星捡石头不花钱 8.4下午至【布尔津】，夜宿#布尔津德顺宾馆# ¥238逛夜市，大吃一顿 ¥108 8.5至【乌鲁木齐】，还车车辆通行费 20+25+15+20+25+99=¥204夜宿#格林豪泰宾馆# ¥200 8.6至【郑州】¥15302=¥3060， 至【南京】¥317.52=¥635 累计油费：257+250+280=¥787 合计：¥12809，加上食物之类，约消费总额为¥13000 上述为彼时旅行结束之时计算的开销，以后租车自驾旅行还有以下几点需注意：- 1异地驾车需谨慎再谨慎，尤其是新疆西藏这种地域广阔、杳无人烟、亲自去消分基本不可能的地域。当收到违章短信的时候，后悔晚矣。 2不是所有航空公司的行李托运（没有超重）就不收费。比如：西部航空。在办理登机牌时工作人员指了指旁边一个小框说我们的箱子超规格了要托运。毕竟是个大箱子，一直都是托运的。在我们以为可以去候机的时候，工作人员却告知缴纳120多元的托运费。目瞪口呆中。。。。。。孔先生一脸质疑的拿着缴费单就去了缴费窗口，我呆若木鸡几秒后夺步上前，把缴费单拿在手里，建议把箱子东西都拿出来再行称重，能减小大部分损失。中间历经箱子已经运送到收发处、工作人员不司其职、效率低下等多方面周折，最后还是不情愿的缴纳了接近一半的托运费用。 3.以后再去新疆自驾，不会选择从乌鲁木齐开始，800多公里还只是到阿勒泰，距离喀纳斯还有一段距离。更推荐的是从阿勒泰或者稍远些的克拉玛依市。乌市到阿勒泰的路上基本没有城市、村庄、树、河流。 4.关于补充，后续想到继续添加。000000版权声明：本文为原创文章，未经允许不得转载! @C ct.cn/EhR2Hqh","categories":[{"name":"C c","slug":"C-c","permalink":"https://kkwell.github.io/categories/C-c/"}],"tags":[{"name":"旅游","slug":"旅游","permalink":"https://kkwell.github.io/tags/旅游/"}]},{"title":"ThreeDES","slug":"ThreeDES","date":"2018-09-28T05:44:08.000Z","updated":"2018-09-30T07:43:51.736Z","comments":true,"path":"2018/09/28/ThreeDES/","link":"","permalink":"https://kkwell.github.io/2018/09/28/ThreeDES/","excerpt":"","text":"3DES加密算法C++实战版权声明：本文为原创文章，未经允许不得转载! @Kongkkwell.github.io/2018/09/28/ThreeDES 首先在尝试使用DES算法之前，一定要先对其算法原理与过程有一个简单的了解熟悉，如果只是应用为主的话，也没必要深究。但是最起码的输入参数、输出参数的类型和作用是要知道的，要不然怎么修改使用呢？继续阅读之前请理解如下概念：DES与3DES的区别、Base64编码和UTF-8编码方式、ECB和CBC模式（因为这里只测试使用这两种方式）、填充方式pkcs5/pkcs7/zero、偏移量 首先是参照对象C#的代码实现，因为使用了1import System.Security.Cryptography 所以实现会异常简单，网上例子一堆，我就不贴连接了，可以自己去找，之后我的分享也会包含C#的测试Demo，Java的过程类似123456import java.security.Key;import javax.crypto.SecretKeyFactory;import javax.crypto.spec.DESedeKeySpec;import javax.crypto.spec.IvParameterSpec;import sun.misc.BASE64Decoder;import sun.misc.BASE64Encoder;网上有很多C语言和C++语言实现的代码，但是很多是有问题的，本文主要参考这篇博客的算法部分: DES算法代码 但是在编译使用后，依然与VS和Java的计算结果不同，主要问题出在以下几个方面 1-填充方式不同参考代码的所有填充方式均为0填充，但是我在查找资料的时候发现pkcs5的BlockSize为8，需要填充几位就把几填充，例如结尾为一个字符那剩下七位都填7，依次类推，而pkcs7的BlockSize为1-255，因此pkcs7的填充部分代码应该也不一样，因此需要将参考代码的填充函数RunPad中的代码做如下替换：源代码： 123if(nType == PAD_PKCS_7)&#123; memset(Out+datalen,0x00,8-res);&#125; 替换后：123if(nType == PAD_PKCS_7)&#123; memset(Out+datalen,8-res,8-res);&#125;因为本人只用到了pkcs7的填充方式，其它的没有添加，如果之后有朋友用到的，可以一起提交升级本github代码。 2-原偏移量需要设定本人偏移量设定如下： 1unsigned char cvec[8] = &#123;1,2,3,4,5,6,7,8&#125;; 3-Qt测试代码实现注意：1加密密匙要转换 2加密数据填充要正确 3解密后填充数据要移除1234567891011121314151617181920212223242526272829303132 QByteArray key = \"YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4\"; QByteArray data = \"00068900002||20180927095839|||3002800173|0200000777|01|0155129175|||\"; QByteArray base64=key.fromBase64(key);//密匙转换 int keynum = base64.size()/8;//密匙个数 8个一组 unsigned char *pdata = (unsigned char*)data.data(); unsigned char *pkey = (unsigned char*)base64.data(); unsigned char rdata[100000]=&#123;0&#125;; CDES mdes; qDebug()&lt;&lt;\"加密数据:\\n\"&lt;&lt;data&lt;&lt;\"\\n\"; qDebug()&lt;&lt;\"ECB ENCRYPT:\"&lt;&lt;mdes.RunDes(CDES::ENCRYPT,CDES::ECB,pdata,rdata,data.size(),pkey,base64.size()); QByteArray str1((char*)rdata,base64.size()*keynum); qDebug()&lt;&lt;str1.toBase64(); qDebug()&lt;&lt;\"ECB DECRYPT:\"&lt;&lt;mdes.RunDes(CDES::DECRYPT,CDES::ECB,(unsigned char*)str1.data(),rdata,str1.size(),pkey,base64.size()); QByteArray str2((char*)rdata,base64.size()*keynum); for(int i=0;i&lt;8;i++)//解密后填充方式的移除 str2.replace(i+1,\"\"); qDebug()&lt;&lt;QString::fromUtf8(str2);//最后为Utf8格式转换 qDebug()&lt;&lt;\"CBC ENCRYPT:\"&lt;&lt;mdes.RunDes(CDES::ENCRYPT,CDES::CBC,pdata,rdata,data.size(),pkey,base64.size()); QByteArray str3((char*)rdata,base64.size()*keynum); qDebug()&lt;&lt;str3.toBase64(); qDebug()&lt;&lt;\"CBC DECRYPT:\"&lt;&lt;mdes.RunDes(CDES::DECRYPT,CDES::CBC,(unsigned char*)str3.data(),rdata,str3.size(),pkey,base64.size()); QByteArray str4((char*)rdata,base64.size()*keynum); for(int i=0;i&lt;8;i++) str4.replace(i+1,\"\"); qDebug()&lt;&lt;QString::fromUtf8(str4); Qt测试结果 测试环境:Qt5.11.1 Ubuntu16.04 VS测试结果 测试环境:VS2015 Win10 VS C#与Qt C++源代码测试DemoGitHub源代码连接 欢迎一起完善升级","categories":[{"name":"Kong","slug":"Kong","permalink":"https://kkwell.github.io/categories/Kong/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"https://kkwell.github.io/tags/Qt/"},{"name":"算法","slug":"算法","permalink":"https://kkwell.github.io/tags/算法/"}]},{"title":"森林草原，星辰大海","slug":"森林草原，星辰大海","date":"2018-09-27T15:35:17.000Z","updated":"2018-09-30T08:21:28.604Z","comments":true,"path":"2018/09/27/森林草原，星辰大海/","link":"","permalink":"https://kkwell.github.io/2018/09/27/森林草原，星辰大海/","excerpt":"","text":"缘起听说“只能靠听说 各自爱着不需要证明 当时决定是错的想着联络 不如心底远远问候最美丽莫过于听说你 还回忆其实我也感激当我听说你还相信爱情” ——刘若英 听说新疆最美的不是伊犁，而是喀纳斯。喀纳斯，一个遥远而陌生的名字，一个触及国界的领域。找到的图片看起来美轮美奂，无与伦比，令人心驰。 听说新疆最美的不是伊犁，而是喀纳斯。喀纳斯，一个遥远而陌生的名字，一个触及国界的领域。找到的图片看起来美轮美奂，无与伦比，令人心驰。 且思且行南京–合肥–银川–乌鲁木齐–阿勒泰–喀纳斯–禾木–郑州–南京","categories":[{"name":"C c","slug":"C-c","permalink":"https://kkwell.github.io/categories/C-c/"}],"tags":[{"name":"旅游","slug":"旅游","permalink":"https://kkwell.github.io/tags/旅游/"},{"name":"生活","slug":"生活","permalink":"https://kkwell.github.io/tags/生活/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-09-26T06:20:28.037Z","updated":"2018-09-30T08:23:37.305Z","comments":true,"path":"2018/09/26/hello-world/","link":"","permalink":"https://kkwell.github.io/2018/09/26/hello-world/","excerpt":"","text":"Welcome to my blog Hello worldLet’s ZheTeng","categories":[],"tags":[]}]}